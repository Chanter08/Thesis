y6.train <- y6[y6.sample, ]
y6.test <- y6[-y6.sample, ]
y6.model <- C5.0(y6.train[, -1], y6.train$FTR, trails = 100)
plot(y6.model)
summary(y6.model)
y6.predict <- predict (y6.model, y6.test[, -1])
CrossTable(
y6.test$FTR,
y6.predict,
prop.c = FALSE,
prop.r = FALSE,
prop.chisq = FALSE
)
y7 <- x[-c(4:18, 22:24)]
set.seed(123)
y7$FTR <- as.factor(y7$FTR)
y7.rows <- nrow(y7)
y7.sample <- sample(y7.rows, y7.rows * 0.6)
y7.train <- y7[y7.sample, ]
y7.test <- y7[-y7.sample, ]
y7.model <- C5.0(y7.train[, -1], y7.train$FTR, trails = 100)
plot(y7.model)
summary(y7.model)
y7.predict <- predict (y7.model, y7.test[, -1])
CrossTable(
y7.test$FTR,
y7.predict,
prop.c = FALSE,
prop.r = FALSE,
prop.chisq = FALSE
)
y8  <- x[-c(2:21)]
set.seed(123)
y8$FTR <- as.factor(y8$FTR)
y8.rows <- nrow(y8)
y8.sample <- sample(y8.rows, y8.rows * 0.6)
y8.train <- y8[y8.sample, ]
y8.test <- y8[-y8.sample, ]
y8.model <- C5.0(y8.train[, -1], y8.train$FTR, trails = 100)
plot(y8.model)
summary(y8.model)
y8.predict <- predict (y8.model, y8.test[, -1])
CrossTable(
y8.test$FTR,
y8.predict,
prop.c = FALSE,
prop.r = FALSE,
prop.chisq = FALSE
)
x <-
read.csv(
"C:\\Users\\User\\Documents\\Thesis\\Data\\Models\\AllLeagues00-01.csv",
stringsAsFactors = FALSE
)
################################# Clean Data ##############################################
x$GBH   <- as.numeric(x$GBH)
x$GBD   <- as.numeric(x$GBD)
x$GBA   <- as.numeric(x$GBA)
x$IWH   <- as.numeric(x$IWH)
x$IWD   <- as.numeric(x$IWD)
x$IWA   <- as.numeric(x$IWA)
x$SBH   <- as.numeric(x$SBH)
x$SBD   <- as.numeric(x$SBD)
x$SBA   <- as.numeric(x$SBA)
x$WHH   <- as.numeric(x$WHH)
x$WHD   <- as.numeric(x$WHD)
x$WHA   <- as.numeric(x$WHA)
x <- na.exclude(x)
################################## Rename Columns #########################################
colnames(x)[1] <- "Season"
################################ Create Dummy Vars ########################################
x <- cbind.data.frame(x, dummy(x$Home))
x <- cbind.data.frame(x, dummy(x$Away))
########################### Remove Cols After Dummy Vars ##################################
x$Home <- NULL
x$Away <- NULL
x$Season <- NULL
x$FTR <- as.factor(x$FTR)
##################################### All Bookies #########################################
NNM <- x
set.seed(123)
NNM.rows <- nrow(NNM)
NNM.sample <- sample(NNM.rows, NNM.rows * 0.6)
NN.train <- NNM[NNM.sample, ]
NN.test <- NNM[NNM.sample, ]
NN = neuralnet(FTR ~ ., NN.train, hidden = 10, linear.output = T)
plot(NN)
comp <- compute(NN, NN.test[-1])
pred.weights <- comp$net.result
idx <- apply(pred.weights, 1, which.max)
pred <- c('A', 'D', 'H')[idx]
CrossTable(
idx,
NN.test$FTR,
prop.c = FALSE,
prop.r = FALSE,
prop.chisq = FALSE
)
NNM <- x
set.seed(123)
NNM.rows <- nrow(NNM)
NNM.sample <- sample(NNM.rows, NNM.rows * 0.6)
NN.train <- NNM[NNM.sample, ]
NN.test <- NNM[NNM.sample, ]
NN = neuralnet(FTR ~ ., NN.train, hidden = 3, linear.output = T)
plot(NN)
comp <- compute(NN, NN.test[-1])
pred.weights <- comp$net.result
idx <- apply(pred.weights, 1, which.max)
pred <- c('A', 'D', 'H')[idx]
CrossTable(
idx,
NN.test$FTR,
prop.c = FALSE,
prop.r = FALSE,
prop.chisq = FALSE
)
NNM <- x
set.seed(123)
NNM.rows <- nrow(NNM)
NNM.sample <- sample(NNM.rows, NNM.rows * 0.6)
NN.train <- NNM[NNM.sample, ]
NN.test <- NNM[NNM.sample, ]
NN = neuralnet(FTR ~ ., NN.train, linear.output = T)
plot(NN)
comp <- compute(NN, NN.test[-1])
pred.weights <- comp$net.result
idx <- apply(pred.weights, 1, which.max)
pred <- c('A', 'D', 'H')[idx]
CrossTable(
idx,
NN.test$FTR,
prop.c = FALSE,
prop.chisq = FALSE
)
CrossTable(
idx,
NN.test$FTR,
prop.c = FALSE,
prop.t = FALSE
prop.chisq = FALSE
)
CrossTable(
idx,
NN.test$FTR,
prop.c = FALSE,
prop.t = FALSE,
prop.chisq = FALSE
)
CrossTable(
idx,
NN.test$FTR,
prop.c = FALSE,
prop.r  = FALSE,
prop.chisq = FALSE
)
NNM2 <- x[-c(5:13)]
set.seed(123)
NNM2.rows <- nrow(NNM2)
NNM2.sample <- sample(NNM2.rows, NNM2.rows * 0.6)
NN2.train <- NNM2[NNM2.sample, ]
NN2.test <- NNM2[NNM2.sample, ]
NN2 = neuralnet(FTR ~ ., NN2.train, hidden = 3, linear.output = T)
plot(NN2)
comp <- compute(NN2, NN2.test[-1])
pred.weights <- comp$net.result
idx <- apply(pred.weights, 1, which.max)
pred <- c('A', 'D', 'H')[idx]
CrossTable(
idx,
NN2.test$FTR,
prop.c = FALSE,
prop.r = FALSE,
prop.chisq = FALSE
)
NNM3 <- x[-c(2:4, 8:13)]
set.seed(123)
NNM3.rows <- nrow(NNM3)
NNM3.sample <- sample(NNM3.rows, NNM3.rows * 0.6)
NN3.train <- NNM3[NNM3.sample, ]
NN3.test <- NNM3[NNM3.sample, ]
NN3 = neuralnet(FTR ~ ., NN3.train, hidden = 3, linear.output = T)
plot(NN3)
comp <- compute(NN3, NN3.test[-1])
pred.weights <- comp$net.result
idx <- apply(pred.weights, 1, which.max)
pred <- c('A', 'D', 'H')[idx]
CrossTable(
idx,
NN3.test$FTR,
prop.c = FALSE,
prop.r = FALSE,
prop.chisq = FALSE
)
NNM4 <- x[-c(2:7, 11:13)]
set.seed(123)
NNM4.rows <- nrow(NNM4)
NNM4.sample <- sample(NNM4.rows, NNM4.rows * 0.6)
NN4.train <- NNM4[NNM4.sample, ]
NN4.test <- NNM4[NNM4.sample, ]
NN4 = neuralnet(FTR ~ ., NN.train, hidden = 3, linear.output = T)
plot(NN4)
comp <- compute(NN4, NN4.test[-1])
pred.weights <- comp$net.result
idx <- apply(pred.weights, 1, which.max)
pred <- c('A', 'D', 'H')[idx]
CrossTable(
idx,
NN4.test$FTR,
prop.c = FALSE,
prop.r = FALSE,
prop.chisq = FALSE
)
NNM5 <- x[-c(2:10)]
set.seed(123)
NNM5.rows <- nrow(NNM5)
NNM5.sample <- sample(NNM5.rows, NNM5.rows * 0.6)
NN5.train <- NNM5[NNM5.sample, ]
NN5.test <- NNM5[NNM5.sample, ]
NN5 = neuralnet(FTR ~ ., NN5.train, hidden = 3, linear.output = T)
plot(NN5)
comp <- compute(NN5, NN5.test[-1])
pred.weights <- comp$net.result
idx <- apply(pred.weights, 1, which.max)
pred <- c('A', 'D', 'H')[idx]
CrossTable(
idx,
NN5.test$FTR,
prop.c = FALSE,
prop.r = FALSE,
prop.chisq = FALSE
)
##########################################################################################################
x <-
read.csv(
"C:\\Users\\User\\Documents\\Thesis\\Data\\Models\\ELO\\ELO01-02.csv",
stringsAsFactors = FALSE
)
################################# Clean Data ##############################################
x$GBH   <- as.numeric(x$GBH)
x$GBD   <- as.numeric(x$GBD)
x$GBA   <- as.numeric(x$GBA)
x$IWH   <- as.numeric(x$IWH)
x$IWD   <- as.numeric(x$IWD)
x$IWA   <- as.numeric(x$IWA)
x$LBH   <- as.numeric(x$LBH)
x$LBD   <- as.numeric(x$LBD)
x$LBA   <- as.numeric(x$LBA)
x$SBH   <- as.numeric(x$SBH)
x$SBD   <- as.numeric(x$SBD)
x$SBA   <- as.numeric(x$SBA)
x$SYH	  <- as.numeric(x$SYH)
x$SYD	  <- as.numeric(x$SYD)
x$SYA   <- as.numeric(x$SYA)
x$WHH   <- as.numeric(x$WHH)
x$WHD   <- as.numeric(x$WHD)
x$WHA   <- as.numeric(x$WHA)
x <- na.exclude(x)
################################## Rename Columns #########################################
colnames(x)[1] <- "Season"
################################ Create Dummy Vars ########################################
x <- cbind.data.frame(x, dummy(x$Home))
x <- cbind.data.frame(x, dummy(x$Away))
########################### Remove Cols After Dummy Vars ##################################
x$Home <- NULL
x$Away <- NULL
x$Season <- NULL
###########################################################################################
NNM <- x
set.seed(123)
NNM.rows <- nrow(NNM)
NNM.sample <- sample(NNM.rows, NNM.rows * 0.6)
NN.train <- NNM[NNM.sample, ]
NN.test <- NNM[NNM.sample, ]
NN = neuralnet(FTR ~ ., NN.train, hidden = 3, linear.output = T)
plot(NN)
comp <- compute(NN, NN.test[-1])
pred.weights <- comp$net.result
idx <- apply(pred.weights, 1, which.max)
pred <- c('A', 'D', 'H')[idx]
CrossTable(
idx,
NN.test$FTR,
prop.c = FALSE,
prop.r = FALSE,
prop.chisq = FALSE
)
x <-
read.csv(
"C:\\Users\\User\\Documents\\Thesis\\Data\\Models\\ELO\\ELO01-02.csv",
stringsAsFactors = FALSE
)
################################# Clean Data ##############################################
x$GBH   <- as.numeric(x$GBH)
x$GBD   <- as.numeric(x$GBD)
x$GBA   <- as.numeric(x$GBA)
x$IWH   <- as.numeric(x$IWH)
x$IWD   <- as.numeric(x$IWD)
x$IWA   <- as.numeric(x$IWA)
x$LBH   <- as.numeric(x$LBH)
x$LBD   <- as.numeric(x$LBD)
x$LBA   <- as.numeric(x$LBA)
x$SBH   <- as.numeric(x$SBH)
x$SBD   <- as.numeric(x$SBD)
x$SBA   <- as.numeric(x$SBA)
x$SYH	  <- as.numeric(x$SYH)
x$SYD	  <- as.numeric(x$SYD)
x$SYA   <- as.numeric(x$SYA)
x$WHH   <- as.numeric(x$WHH)
x$WHD   <- as.numeric(x$WHD)
x$WHA   <- as.numeric(x$WHA)
x <- na.exclude(x)
################################## Rename Columns #########################################
colnames(x)[1] <- "Season"
################################ Create Dummy Vars ########################################
x <- cbind.data.frame(x, dummy(x$Home))
x <- cbind.data.frame(x, dummy(x$Away))
########################### Remove Cols After Dummy Vars ##################################
x$Home <- NULL
x$Away <- NULL
x$Season <- NULL
###########################################################################################
NNM <- x
set.seed(123)
NNM.rows <- nrow(NNM)
NNM.sample <- sample(NNM.rows, NNM.rows * 0.6)
NN.train <- NNM[NNM.sample, ]
NN.test <- NNM[NNM.sample, ]
NN = neuralnet(FTR ~ ., NN.train, hidden = 3, linear.output = T)
plot(NN)
comp <- compute(NN, NN.test[-1])
pred.weights <- comp$net.result
idx <- apply(pred.weights, 1, which.max)
pred <- c('A', 'D', 'H')[idx]
CrossTable(
idx,
NN.test$FTR,
prop.c = FALSE,
prop.r = FALSE,
prop.chisq = FALSE
)
x <-
read.csv(
"C:\\Users\\User\\Documents\\Thesis\\Data\\Models\\ELO\\ELO01-02.csv",
stringsAsFactors = FALSE
)
################################# Clean Data ##############################################
x$GBH   <- as.numeric(x$GBH)
x$GBD   <- as.numeric(x$GBD)
x$GBA   <- as.numeric(x$GBA)
x$IWH   <- as.numeric(x$IWH)
x$IWD   <- as.numeric(x$IWD)
x$IWA   <- as.numeric(x$IWA)
x$LBH   <- as.numeric(x$LBH)
x$LBD   <- as.numeric(x$LBD)
x$LBA   <- as.numeric(x$LBA)
x$SBH   <- as.numeric(x$SBH)
x$SBD   <- as.numeric(x$SBD)
x$SBA   <- as.numeric(x$SBA)
x$SYH	  <- as.numeric(x$SYH)
x$SYD	  <- as.numeric(x$SYD)
x$SYA   <- as.numeric(x$SYA)
x$WHH   <- as.numeric(x$WHH)
x$WHD   <- as.numeric(x$WHD)
x$WHA   <- as.numeric(x$WHA)
x <- na.exclude(x)
################################## Rename Columns #########################################
colnames(x)[1] <- "Season"
################################ Create Dummy Vars ########################################
x <- cbind.data.frame(x, dummy(x$Home))
x <- cbind.data.frame(x, dummy(x$Away))
########################### Remove Cols After Dummy Vars ##################################
x$Home <- NULL
x$Away <- NULL
x$Season <- NULL
NNM <- x
set.seed(123)
NNM.rows <- nrow(NNM)
NNM.sample <- sample(NNM.rows, NNM.rows * 0.6)
NN.train <- NNM[NNM.sample, ]
NN.test <- NNM[NNM.sample, ]
NN = neuralnet(FTR ~ ., NN.train, linear.output = T)
plot(NN)
comp <- compute(NN, NN.test[-1])
pred.weights <- comp$net.result
idx <- apply(pred.weights, 1, which.max)
pred <- c('A', 'D', 'H')[idx]
CrossTable(
idx,
NN.test$FTR,
prop.c = FALSE,
prop.r = FALSE,
prop.chisq = FALSE
)
View(x)
x$date <- NULL
NNM <- x
set.seed(123)
NNM.rows <- nrow(NNM)
NNM.sample <- sample(NNM.rows, NNM.rows * 0.6)
NN.train <- NNM[NNM.sample, ]
NN.test <- NNM[NNM.sample, ]
NN = neuralnet(FTR ~ ., NN.train, linear.output = T)
plot(NN)
comp <- compute(NN, NN.test[-1])
pred.weights <- comp$net.result
idx <- apply(pred.weights, 1, which.max)
pred <- c('A', 'D', 'H')[idx]
CrossTable(
idx,
NN.test$FTR,
prop.c = FALSE,
prop.r = FALSE,
prop.chisq = FALSE
)
NNM <- x
set.seed(123)
NNM.rows <- nrow(NNM)
NNM.sample <- sample(NNM.rows, NNM.rows * 0.6)
NN.train <- NNM[NNM.sample, ]
NN.test <- NNM[NNM.sample, ]
NN = neuralnet(FTR ~ ., NN.train, hidden=3,linear.output = T)
plot(NN)
comp <- compute(NN, NN.test[-1])
pred.weights <- comp$net.result
idx <- apply(pred.weights, 1, which.max)
pred <- c('A', 'D', 'H')[idx]
CrossTable(
idx,
NN.test$FTR,
prop.c = FALSE,
prop.r = FALSE,
prop.chisq = FALSE
)
NNM2 <- x[-c(5:19)]
set.seed(123)
NNM2.rows <- nrow(NNM2)
NNM2.sample <- sample(NNM2.rows, NNM2.rows * 0.6)
NN2.train <- NNM2[NNM2.sample, ]
NN2.test <- NNM2[NNM2.sample, ]
NN2 = neuralnet(FTR ~ ., NN2.train, hidden = 3, linear.output = T)
plot(NN2)
comp <- compute(NN2, NN2.test[-1])
pred.weights <- comp$net.result
idx <- apply(pred.weights, 1, which.max)
pred <- c('A', 'D', 'H')[idx]
CrossTable(
idx,
NN2.test$FTR,
prop.c = FALSE,
prop.r = FALSE,
prop.chisq = FALSE
)
summary(NN2)
summary(NN2$result.matrix)
NNM3 <- x[-c(2:4, 8:19)]
set.seed(123)
NNM3.rows <- nrow(NNM3)
NNM3.sample <- sample(NNM3.rows, NNM3.rows * 0.6)
NN3.train <- NNM3[NNM3.sample, ]
NN3.test <- NNM3[NNM3.sample, ]
NN3 = neuralnet(FTR ~ ., NN3.train, hidden = 3, linear.output = T)
plot(NN3)
comp <- compute(NN3, NN3.test[-1])
pred.weights <- comp$net.result
idx <- apply(pred.weights, 1, which.max)
pred <- c('A', 'D', 'H')[idx]
CrossTable(
idx,
NN3.test$FTR,
prop.c = FALSE,
prop.r = FALSE,
prop.chisq = FALSE
)
NNM4 <- x[-c(2:7, 11:19)]
set.seed(123)
NNM4.rows <- nrow(NNM4)
NNM4.sample <- sample(NNM4.rows, NNM4.rows * 0.6)
NN4.train <- NNM4[NNM4.sample, ]
NN4.test <- NNM4[NNM4.sample, ]
NN4 = neuralnet(FTR ~ ., NN.train, hidden = 3, linear.output = T)
plot(NN4)
comp <- compute(NN4, NN4.test[-1])
pred.weights <- comp$net.result
idx <- apply(pred.weights, 1, which.max)
pred <- c('A', 'D', 'H')[idx]
CrossTable(
idx,
NN4.test$FTR,
prop.c = FALSE,
prop.r = FALSE,
prop.chisq = FALSE
)
NNM5 <- x[-c(2:10, 14:19)]
set.seed(123)
NNM5.rows <- nrow(NNM5)
NNM5.sample <- sample(NNM5.rows, NNM5.rows * 0.6)
NN5.train <- NNM5[NNM5.sample, ]
NN5.test <- NNM5[NNM5.sample, ]
NN5 = neuralnet(FTR ~ ., NN5.train, hidden = 3, linear.output = T)
plot(NN5)
comp <- compute(NN5, NN5.test[-1])
pred.weights <- comp$net.result
idx <- apply(pred.weights, 1, which.max)
pred <- c('A', 'D', 'H')[idx]
CrossTable(
idx,
NN5.test$FTR,
prop.c = FALSE,
prop.r = FALSE,
prop.chisq = FALSE
)
