################################## Rename Columns #########################################
colnames(x)[1] <- "Season"
################################ Create Dummy Vars ########################################
x <- cbind.data.frame(x, dummy(x$Home))
x <- cbind.data.frame(x, dummy(x$Away))
########################### Remove Cols After Dummy Vars ##################################
x$Home <- NULL
x$Away <- NULL
x$Season <- NULL
##################################### All Bookies #########################################
x$GBH   <- as.numeric(x$GBH)
x$GBD   <- as.numeric(x$GBD)
x$GBA   <- as.numeric(x$GBA)
x$IWH   <- as.numeric(x$IWH)
x$IWD   <- as.numeric(x$IWD)
x$IWA   <- as.numeric(x$IWA)
x$LBH   <- as.numeric(x$LBH)
x$LBD   <- as.numeric(x$LBD)
x$LBA   <- as.numeric(x$LBA)
x$SBH   <- as.numeric(x$SBH)
x$SBD   <- as.numeric(x$SBD)
x$SBA   <- as.numeric(x$SBA)
x$WHH   <- as.numeric(x$WHH)
x$WHD   <- as.numeric(x$WHD)
x$WHA   <- as.numeric(x$WHA)
x <- na.exclude(x)
################################## Rename Columns #########################################
colnames(x)[1] <- "Season"
################################ Create DummDT Vars ########################################
x <- cbind.data.frame(x, dummy(x$Home))
x <- cbind.data.frame(x, dummy(x$Away))
########################### Remove Cols After DummDT Vars ##################################
x$Home <- NULL
x$Away <- NULL
x$Season <- NULL
x$date <- NULL
##################################### All Bookies #########################################
DT1 <- x
set.seed(123)
DT1$FTR <- as.factor(DT1$FTR)
DT1.rows <- nrow(DT1)
DT1.sample <- sample(DT1.rows, DT1.rows * 0.6)
DT1.train <- DT1[DT1.sample, ]
DT1.test <- DT1[-DT1.sample, ]
DT1.model <- C5.0(DT1.train[, -1], DT1.train$FTR, trails = 100)
plot(DT1.model)
summary(DT1.model)
DT1.predict <- predict (DT1.model, DT1.test[, -1])
CrossTable(
DT1.test$FTR,
DT1.predict,
prop.c = FALSE,
prop.r = FALSE,
prop.chisq = FALSE
)
x <-
read.csv(
"C:\\Users\\User\\Documents\\Thesis\\Data\\Models\\Season\\AllLeagues00-01.csv",
stringsAsFactors = FALSE
)
################################# Clean Data ##############################################
x$GBH   <- as.numeric(x$GBH)
x$GBD   <- as.numeric(x$GBD)
x$GBA   <- as.numeric(x$GBA)
x$IWH   <- as.numeric(x$IWH)
x$IWD   <- as.numeric(x$IWD)
x$IWA   <- as.numeric(x$IWA)
x$SBH   <- as.numeric(x$SBH)
x$SBD   <- as.numeric(x$SBD)
x$SBA   <- as.numeric(x$SBA)
x$WHH   <- as.numeric(x$WHH)
x$WHD   <- as.numeric(x$WHD)
x$WHA   <- as.numeric(x$WHA)
x <- na.exclude(x)
################################## Rename Columns #########################################
colnames(x)[1] <- "Season"
################################ Create Dummy Vars ########################################
x <- cbind.data.frame(x, dummy(x$Home))
x <- cbind.data.frame(x, dummy(x$Away))
########################### Remove Cols After Dummy Vars ##################################
x$Home <- NULL
x$Away <- NULL
x$Season <- NULL
##################################### All Bookies #########################################
x$GBH   <- as.numeric(x$GBH)
x$GBD   <- as.numeric(x$GBD)
x$GBA   <- as.numeric(x$GBA)
x$IWH   <- as.numeric(x$IWH)
x$IWD   <- as.numeric(x$IWD)
x$IWA   <- as.numeric(x$IWA)
x$LBH   <- as.numeric(x$LBH)
x$LBD   <- as.numeric(x$LBD)
x$LBA   <- as.numeric(x$LBA)
x$SBH   <- as.numeric(x$SBH)
x$SBD   <- as.numeric(x$SBD)
x$SBA   <- as.numeric(x$SBA)
x$WHH   <- as.numeric(x$WHH)
x$WHD   <- as.numeric(x$WHD)
x$WHA   <- as.numeric(x$WHA)
x <- na.exclude(x)
################################## Rename Columns #########################################
colnames(x)[1] <- "Season"
################################ Create DummDT Vars ########################################
x <- cbind.data.frame(x, dummy(x$Home))
x <- cbind.data.frame(x, dummy(x$Away))
########################### Remove Cols After DummDT Vars ##################################
x$Home <- NULL
x$Away <- NULL
x$Season <- NULL
x$date <- NULL
##################################### All Bookies #########################################
DT1 <- x
set.seed(123)
DT1$FTR <- as.factor(DT1$FTR)
DT1.rows <- nrow(DT1)
DT1.samplesample <- sample.int(n = nrow(DT1), size = floor(.60*nrow(DT1)), replace = F)
DT1.train <- DT1[DT1.sample, ]
DT1.test <- DT1[-DT1.sample, ]
DT1.model <- C5.0(DT1.train[, -1], DT1.train$FTR, trails = 100)
plot(DT1.model)
summary(DT1.model)
DT1.predict <- predict (DT1.model, DT1.test[, -1])
CrossTable(
DT1.test$FTR,
DT1.predict,
prop.c = FALSE,
prop.r = FALSE,
prop.chisq = FALSE
)
library("caret")
library(corrplot)
library(C50)
library(dummies)
library(gmodels)
library(Metrics)
library(neuralnet)
library(plyr)
library(rpart)
library(tree)
library(e1071)
library(rpart.plot)
library(fastDummies)
################################## Load Files #############################################
x <-
read.csv(
"C:\\Users\\User\\Documents\\Thesis\\Data\\Models\\Season\\AllLeagues00-01.csv",
stringsAsFactors = FALSE
)
################################# Clean Data ##############################################
x$GBH   <- as.numeric(x$GBH)
x$GBD   <- as.numeric(x$GBD)
x$GBA   <- as.numeric(x$GBA)
x$IWH   <- as.numeric(x$IWH)
x$IWD   <- as.numeric(x$IWD)
x$IWA   <- as.numeric(x$IWA)
x$SBH   <- as.numeric(x$SBH)
x$SBD   <- as.numeric(x$SBD)
x$SBA   <- as.numeric(x$SBA)
x$WHH   <- as.numeric(x$WHH)
x$WHD   <- as.numeric(x$WHD)
x$WHA   <- as.numeric(x$WHA)
x <- na.exclude(x)
################################## Rename Columns #########################################
colnames(x)[1] <- "Season"
################################ Create Dummy Vars ########################################
x <- cbind.data.frame(x, dummy(x$Home))
x <- cbind.data.frame(x, dummy(x$Away))
########################### Remove Cols After Dummy Vars ##################################
x$Home <- NULL
x$Away <- NULL
x$Season <- NULL
##################################### All Bookies #########################################
x$GBH   <- as.numeric(x$GBH)
x$GBD   <- as.numeric(x$GBD)
x$GBA   <- as.numeric(x$GBA)
x$IWH   <- as.numeric(x$IWH)
x$IWD   <- as.numeric(x$IWD)
x$IWA   <- as.numeric(x$IWA)
x$LBH   <- as.numeric(x$LBH)
x$LBD   <- as.numeric(x$LBD)
x$LBA   <- as.numeric(x$LBA)
x$SBH   <- as.numeric(x$SBH)
x$SBD   <- as.numeric(x$SBD)
x$SBA   <- as.numeric(x$SBA)
x$WHH   <- as.numeric(x$WHH)
x$WHD   <- as.numeric(x$WHD)
x$WHA   <- as.numeric(x$WHA)
x <- na.exclude(x)
################################## Rename Columns #########################################
colnames(x)[1] <- "Season"
################################ Create DummDT Vars ########################################
x <- cbind.data.frame(x, dummy(x$Home))
x <- cbind.data.frame(x, dummy(x$Away))
########################### Remove Cols After DummDT Vars ##################################
x$Home <- NULL
x$Away <- NULL
x$Season <- NULL
x$date <- NULL
##################################### All Bookies #########################################
DT1 <- x
set.seed(123)
DT1$FTR <- as.factor(DT1$FTR)
DT1.rows <- nrow(DT1)
DT1.samplesample <- sample.int(n = nrow(DT1), size = floor(.60*nrow(DT1)), replace = F)
DT1.train <- DT1[DT1.sample, ]
DT1.test <- DT1[-DT1.sample, ]
DT1.model <- C5.0(DT1.train[, -1], DT1.train$FTR, trails = 100)
plot(DT1.model)
summary(DT1.model)
DT1.predict <- predict (DT1.model, DT1.test[, -1])
CrossTable(
DT1.test$FTR,
DT1.predict,
prop.c = FALSE,
prop.r = FALSE,
prop.chisq = FALSE
)
DT1 <- x
set.seed(123)
DT1$FTR <- as.factor(DT1$FTR)
DT1.rows <- nrow(DT1)
DT1.sample <- sample.int(n = nrow(DT1), size = floor(.60*nrow(DT1)), replace = F)
DT1.train <- DT1[DT1.sample, ]
DT1.test <- DT1[-DT1.sample, ]
DT1.model <- C5.0(DT1.train[, -1], DT1.train$FTR, trails = 100)
plot(DT1.model)
summary(DT1.model)
DT1.predict <- predict (DT1.model, DT1.test[, -1])
CrossTable(
DT1.test$FTR,
DT1.predict,
prop.c = FALSE,
prop.r = FALSE,
prop.chisq = FALSE
)
DT1 <- x
x <-
read.csv(
"C:\\Users\\User\\Documents\\Thesis\\Data\\Models\\Season\\AllLeagues00-01.csv",
stringsAsFactors = FALSE
)
################################# Clean Data ##############################################
x$GBH   <- as.numeric(x$GBH)
x$GBD   <- as.numeric(x$GBD)
x$GBA   <- as.numeric(x$GBA)
x$IWH   <- as.numeric(x$IWH)
x$IWD   <- as.numeric(x$IWD)
x$IWA   <- as.numeric(x$IWA)
x$SBH   <- as.numeric(x$SBH)
x$SBD   <- as.numeric(x$SBD)
x$SBA   <- as.numeric(x$SBA)
x$WHH   <- as.numeric(x$WHH)
x$WHD   <- as.numeric(x$WHD)
x$WHA   <- as.numeric(x$WHA)
x <- na.exclude(x)
################################## Rename Columns #########################################
colnames(x)[1] <- "Season"
################################ Create Dummy Vars ########################################
x <- cbind.data.frame(x, dummy(x$Home))
x <- cbind.data.frame(x, dummy(x$Away))
########################### Remove Cols After Dummy Vars ##################################
x$Home <- NULL
x$Away <- NULL
x$Season <- NULL
##################################### All Bookies #########################################
x$GBH   <- as.numeric(x$GBH)
x$GBD   <- as.numeric(x$GBD)
x$GBA   <- as.numeric(x$GBA)
x$IWH   <- as.numeric(x$IWH)
x$IWD   <- as.numeric(x$IWD)
x$IWA   <- as.numeric(x$IWA)
x$LBH   <- as.numeric(x$LBH)
x$LBD   <- as.numeric(x$LBD)
x$LBA   <- as.numeric(x$LBA)
x$SBH   <- as.numeric(x$SBH)
x$SBD   <- as.numeric(x$SBD)
x$SBA   <- as.numeric(x$SBA)
x$WHH   <- as.numeric(x$WHH)
x$WHD   <- as.numeric(x$WHD)
x$WHA   <- as.numeric(x$WHA)
x <- na.exclude(x)
################################## Rename Columns #########################################
colnames(x)[1] <- "Season"
################################ Create DummDT Vars ########################################
x <- cbind.data.frame(x, dummy(x$Home))
x <- cbind.data.frame(x, dummy(x$Away))
########################### Remove Cols After DummDT Vars ##################################
x$Home <- NULL
x$Away <- NULL
x$Season <- NULL
x$date <- NULL
##################################### All Bookies #########################################
DT1 <- x
set.seed(123)
DT1$FTR <- as.factor(DT1$FTR)
DT1.rows <- nrow(DT1)
DT1.sample <- sample.int(n = nrow(DT1), size = floor(.60*nrow(DT1)), replace = F)
DT1.train <- DT1[DT1.sample, ]
DT1.test <- DT1[-DT1.sample, ]
DT1.model <- C5.0(DT1.train[, -1], DT1.train$FTR, trails = 100)
plot(DT1.model)
summary(DT1.model)
DT1.predict <- predict (DT1.model, DT1.test[, -1])
CrossTable(
DT1.test$FTR,
DT1.predict,
prop.c = FALSE,
prop.r = FALSE,
prop.chisq = FALSE
)
train_control <- trainControl(method="cv", number=10)
model <- train(FTR~.,data=DT1.train, trControl=train_control,method="nb")
train_control <- trainControl(method="cv", number=10)
model <- train(FTR~.,data=DT1.train, trControl=train_control,method="nb")
print(model)
View(x)
x <-
read.csv(
"C:\\Users\\User\\Documents\\Thesis\\Data\\Models\\League\\BPL\\test.csv",
stringsAsFactors = FALSE
)
################################# Clean Data ##############################################
x$GBH   <- as.numeric(x$GBH)
x$GBD   <- as.numeric(x$GBD)
x$GBA   <- as.numeric(x$GBA)
x$IWH   <- as.numeric(x$IWH)
x$IWD   <- as.numeric(x$IWD)
x$IWA   <- as.numeric(x$IWA)
x$SBH   <- as.numeric(x$SBH)
x$SBD   <- as.numeric(x$SBD)
x$SBA   <- as.numeric(x$SBA)
x$WHH   <- as.numeric(x$WHH)
x$WHD   <- as.numeric(x$WHD)
x$WHA   <- as.numeric(x$WHA)
x <- na.exclude(x)
################################## Rename Columns #########################################
colnames(x)[1] <- "Season"
################################ Create Dummy Vars ########################################
x$Season <- NULL
###########################################################################################
DT1 <- x
DT1$Home <- as.factor(DT1$Home)
DT1$Away <- as.factor(DT1$Away)
set.seed(123)
DT1$FTR <- as.factor(DT1$FTR)
DT1.rows <- nrow(DT1)
DT1.sample <- sample(DT1.rows, DT1.rows * 0.6)
DT1.train <- DT1[DT1.sample, ]
DT1.test <- DT1[-DT1.sample, ]
DT1.model <- C5.0(DT1.train[, -1], DT1.train$FTR, trails = 100)
plot(DT1.model)
summary(DT1.model)
DT1.predict <- predict (DT1.model, DT1.test[, -1])
CrossTable(
DT1.test$FTR,
DT1.predict,
prop.c = FALSE,
prop.r = FALSE,
prop.chisq = FALSE
)
x <-
read.csv(
"C:\\Users\\User\\Documents\\Thesis\\Data\\Models\\League\\BPL\\test.csv",
stringsAsFactors = FALSE
)
################################# Clean Data ##############################################
x$GBH   <- as.numeric(x$GBH)
x$GBD   <- as.numeric(x$GBD)
x$GBA   <- as.numeric(x$GBA)
x$IWH   <- as.numeric(x$IWH)
x$IWD   <- as.numeric(x$IWD)
x$IWA   <- as.numeric(x$IWA)
x$LBH   <- as.numeric(x$LBH)
x$LBD   <- as.numeric(x$LBD)
x$LBA   <- as.numeric(x$LBA)
x$SBH   <- as.numeric(x$SBH)
x$SBD   <- as.numeric(x$SBD)
x$SBA   <- as.numeric(x$SBA)
x$WHH   <- as.numeric(x$WHH)
x$WHD   <- as.numeric(x$WHD)
x$WHA   <- as.numeric(x$WHA)
x <- na.exclude(x)
################################## Rename Columns #########################################
colnames(x)[1] <- "Season"
################################ Create Dummy Vars ########################################
x$Season <- NULL
x$date <- NULL
###########################################################################################
DT1 <- x
DT1$Home <- as.factor(DT1$Home)
DT1$Away <- as.factor(DT1$Away)
set.seed(123)
DT1$FTR <- as.factor(DT1$FTR)
DT1.rows <- nrow(DT1)
DT1.sample <- sample(DT1.rows, DT1.rows * 0.6)
DT1.train <- DT1[DT1.sample, ]
DT1.test <- DT1[-DT1.sample, ]
DT1.model <- C5.0(DT1.train[, -1], DT1.train$FTR, trails = 100)
plot(DT1.model)
summary(DT1.model)
DT1.predict <- predict (DT1.model, DT1.test[, -1])
CrossTable(
DT1.test$FTR,
DT1.predict,
prop.c = FALSE,
prop.r = FALSE,
prop.chisq = FALSE
)
DT1 <- x
DT1$Home <- as.factor(DT1$Home)
DT1$Away <- as.factor(DT1$Away)
set.seed(123)
DT1$FTR <- as.factor(DT1$FTR)
DT1.rows <- nrow(DT1)
DT1.sample <- sample(DT1.rows, DT1.rows * 0.6)
DT1.train <- DT1[DT1.sample, ]
DT1.test <- DT1[-DT1.sample, ]
DT1.model <- C5.0(DT1.train[, -3], DT1.train$FTR, trails = 100)
plot(DT1.model)
summary(DT1.model)
DT1.predict <- predict (DT1.model, DT1.test[, -3])
CrossTable(
DT1.test$FTR,
DT1.predict,
prop.c = FALSE,
prop.r = FALSE,
prop.chisq = FALSE
)
DT1.model <- C5.0(DT1.train[, -1], threshold=0.01,DT1.train$FTR, trails = 100)
plot(DT1.model)
DT1 <- x
set.seed(123)
DT1$FTR <- as.factor(DT1$FTR)
DT1.rows <- nrow(DT1)
DT1.sample <- sample(DT1.rows, DT1.rows * 0.6)
DT1.train <- DT1[DT1.sample, ]
DT1.test <- DT1[-DT1.sample, ]
DT1.model <- C5.0(DT1.train[, -1], threshold=0.01,DT1.train$FTR, trails = 100)
plot(DT1.model)
summary(DT1.model)
DT1.predict <- predict (DT1.model, DT1.test[, -1])
CrossTable(
DT1.test$FTR,
DT1.predict,
prop.c = FALSE,
prop.r = FALSE,
prop.chisq = FALSE
)
DT1 <- x
set.seed(123)
DT1$FTR <- as.factor(DT1$FTR)
DT1.rows <- nrow(DT1)
DT1.sample <- sample(DT1.rows, DT1.rows * 0.6)
DT1.train <- DT1[DT1.sample, ]
DT1.test <- DT1[-DT1.sample, ]
DT1.model <- C5.0(DT1.train[, -3], threshold=0.01,DT1.train$FTR, trails = 100)
plot(DT1.model)
summary(DT1.model)
DT1.predict <- predict (DT1.model, DT1.test[, -3])
CrossTable(
DT1.test$FTR,
DT1.predict,
prop.c = FALSE,
prop.r = FALSE,
prop.chisq = FALSE
)
Tree <-rpart(FTR~.,data=DT1.train,control=rpart.control(minsplit=50,cp=0))
treeOptimal <- prune(Tree,cp=Tree$cptable[which.min(Tree$cptable[,4]),1])
rpart.plot(treeOptimal)
DT1 <- x
set.seed(123)
DT1$FTR <- as.factor(DT1$FTR)
DT1.rows <- nrow(DT1)
DT1.sample <- sample(DT1.rows, DT1.rows * 0.6)
DT1.train <- DT1[DT1.sample, ]
DT1.test <- DT1[-DT1.sample, ]
Tree <-rpart(FTR~.,data=DT1.train,control=rpart.control(minsplit=50,cp=0))
treeOptimal <- prune(Tree,cp=Tree$cptable[which.min(Tree$cptable[,4]),1])
a=predict(ptitanicOptimal,DT1.test,type = "class")
DT1 <- x
set.seed(123)
DT1$FTR <- as.factor(DT1$FTR)
DT1.rows <- nrow(DT1)
DT1.sample <- sample(DT1.rows, DT1.rows * 0.6)
DT1.train <- DT1[DT1.sample, ]
DT1.test <- DT1[-DT1.sample, ]
Tree <-rpart(FTR~.,data=DT1.train,control=rpart.control(minsplit=50,cp=0))
treeOptimal <- prune(Tree,cp=Tree$cptable[which.min(Tree$cptable[,4]),1])
a=predict(DT1.model,DT1.test,type = "class")
DT1.predict <- predict (DT1.model, DT1.test[, -1])
CrossTable(
DT1.test$FTR,
DT1.predict,
prop.c = FALSE,
prop.r = FALSE,
prop.chisq = FALSE
)
mc=table(a,DT1.model)
################
install.packages("randomForest")
library(randomForest)
model1 <- randomForest(FTR ~ ., data = DT1.train, importance = TRUE)
model2 <- randomForest(FTR ~ ., data = DT1.train, ntree = 500, mtry = 6, importance = TRUE)
predTrain <- predict(model2, DT1.train, type = "class")
# Checking classification accuracy
table(predTrain, DT1.train$FTR)
model1 <- randomForest(FTR ~ ., data = DT1.train, importance = TRUE)
tree.x = tree( FTR~. ,DT1.train)
tree.pred= predict (tree.x , DT1.test , type ="class")
summary(tree.pred)
View(DT1.test)
table (tree.pred , DT1.test )
